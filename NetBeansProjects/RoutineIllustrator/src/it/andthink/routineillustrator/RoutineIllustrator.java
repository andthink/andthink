/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package it.andthink.routineillustrator;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author meranr
 */
public class RoutineIllustrator extends javax.swing.JFrame {

	/**
	 * Creates new form RoutineIllustrator
	 */
	public RoutineIllustrator() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this
	 * code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorCode = new javax.swing.JEditorPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuOpen = new javax.swing.JMenuItem();
        jMenuItemClose = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(640, 480));

        jEditorCode.setMinimumSize(new java.awt.Dimension(640, 480));
        jScrollPane1.setViewportView(jEditorCode);

        jMenuBar1.setMinimumSize(new java.awt.Dimension(640, 480));

        jMenuFile.setText("File");
        jMenuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileActionPerformed(evt);
            }
        });

        jMenuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuOpen.setText("Open...");
        jMenuOpen.setToolTipText("");
        jMenuOpen.setActionCommand("Open");
        jMenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuOpen);

        jMenuItemClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemClose.setText("Close");
        jMenuItemClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCloseActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemClose);

        jMenuBar1.add(jMenuFile);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jMenuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_jMenuFileActionPerformed

	private void jMenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenActionPerformed
		int returnVal = FileChooser.showOpenDialog(this);

		if (returnVal == JFileChooser.APPROVE_OPTION) {
			file = FileChooser.getSelectedFile();
			fillEditor(file);
			//DirChoose.setText(FileChooser.getSelectedFile().getPath());
			//This is where a real application would open the file.
		} else {
			// DirChoose.setText("");
		}
	}//GEN-LAST:event_jMenuOpenActionPerformed

	private void jMenuItemCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCloseActionPerformed
		System.exit(0);
	}//GEN-LAST:event_jMenuItemCloseActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/*
		 * Set the Nimbus look and feel
		 */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For
		 * details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
			//javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
		} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(RoutineIllustrator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
			/*
			 * try { for (javax.swing.UIManager.LookAndFeelInfo info :
			 * javax.swing.UIManager.getInstalledLookAndFeels()) { if ("Nimbus".equals(info.getName())) {
			 * javax.swing.UIManager.setLookAndFeel(info.getClassName()); break; } } } catch (
			 * ClassNotFoundException | InstantiationException | IllegalAccessException |
			 * javax.swing.UnsupportedLookAndFeelException exc) {
			 * java.util.logging.Logger.getLogger(ShelfFrame.class.getName()).log(java.util.logging.Level.SEVERE,
			 * null, exc); }
			 */
		}
		//</editor-fold>

		/*
		 * Create and display the form
		 */
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new RoutineIllustrator().setVisible(true);
			}
		});
	}
	File file;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JEditorPane jEditorCode;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemClose;
    private javax.swing.JMenuItem jMenuOpen;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

	private void fillEditor(File file) {
		try {
			String text = new Scanner(file).useDelimiter("\\A").next();
			ArrayList<Metodo> methods = new ArrayList();
			ArrayList<String> items = new ArrayList();
			
			
			Pattern p = Pattern.compile("^pagename=\\[[\r]*\n((?:'[a-zA-Z_0-9]*[\r]*\n)*)]", Pattern.MULTILINE);
			Matcher m = p.matcher(text);
			
			String code = "";
			Metodo cm;
			
			while (m.find())
			{
				String[] split = m.group(1).split("'");
				
				for(String funzione : split ){
					funzione = funzione.replaceAll("[\r]*\n","");
					if(funzione.length() > 0){
						cm = new Metodo(funzione);
						methods.add(cm);
					}
				}
			}
			
			p = Pattern.compile("^pagetitle=\\[[\r]*\n(?:('[\\S\\s]*[\r]*\n)*)]", Pattern.MULTILINE);
			m = p.matcher(text);
			while (m.find())
			{
				//jEditorCode.setText(m.group(0));
				String[] split = m.group(1).split("'");
				int counter = 0;
				for(String titolo : split ){
					titolo = titolo.replaceAll("[\r]*\n","");
					if(titolo.length() > 0){
						try {
							cm = methods.get(counter);
							cm.setCommento(titolo);
							counter++;	
						} catch (Exception e) {
							System.out.println(e.getMessage());
						}
						
					}
				}
			}
			
			
			p = Pattern.compile("^Items=\\[\r*\n([a-zA-Z0-9=\\.\\'_]*\r*\n)*]", Pattern.MULTILINE);
			m = p.matcher(text);
			
			while (m.find())
			{
				String item = m.group(1);
				System.out.println(m.group(1));
				
				item = item.replaceAll("[\r]*\n","");
				if(item.length() > 0){
					items.add(item);
				}
			}
			
			for(String iii : items){
				System.out.println(iii);
			}
				
			 
			for(int i=0; i<methods.size(); i++){
				code += ("/*");
				code += "\n";
				code += ("*"+methods.get(i).getCommento());
				code += "\n";
				code += ("*/");
				code += "\n";
				code += (methods.get(i).getNome() + "(){}");
				code += "\n\n";
			}
			jEditorCode.setText(code);	

			
		} catch (FileNotFoundException ex) {
			Logger.getLogger(RoutineIllustrator.class.getName()).log(Level.SEVERE, null, ex);
		}

	}
}

